using AdventOfCode2022.Common.Abstraction;
using Moq;

namespace AdventOfCode2022.Tests.Day
{
    [TestClass]
    public class Day10
    {
        [TestMethod]
        public async Task Part1_ForInputFromExample_ShouldReturns13140()
        {
            var fileReaderMock = new Mock<ITextFileReader>();
            fileReaderMock.Setup(reader => reader.ReadAllLinesAsync(It.IsAny<string>())).Returns(() =>
            {
                var input = new[]
                {
                    "addx 15",
                    "addx -11",
                    "addx 6",
                    "addx -3",
                    "addx 5",
                    "addx -1",
                    "addx -8",
                    "addx 13",
                    "addx 4",
                    "noop",
                    "addx -1",
                    "addx 5",
                    "addx -1",
                    "addx 5",
                    "addx -1",
                    "addx 5",
                    "addx -1",
                    "addx 5",
                    "addx -1",
                    "addx -35",
                    "addx 1",
                    "addx 24",
                    "addx -19",
                    "addx 1",
                    "addx 16",
                    "addx -11",
                    "noop",
                    "noop",
                    "addx 21",
                    "addx -15",
                    "noop",
                    "noop",
                    "addx -3",
                    "addx 9",
                    "addx 1",
                    "addx -3",
                    "addx 8",
                    "addx 1",
                    "addx 5",
                    "noop",
                    "noop",
                    "noop",
                    "noop",
                    "noop",
                    "addx -36",
                    "noop",
                    "addx 1",
                    "addx 7",
                    "noop",
                    "noop",
                    "noop",
                    "addx 2",
                    "addx 6",
                    "noop",
                    "noop",
                    "noop",
                    "noop",
                    "noop",
                    "addx 1",
                    "noop",
                    "noop",
                    "addx 7",
                    "addx 1",
                    "noop",
                    "addx -13",
                    "addx 13",
                    "addx 7",
                    "noop",
                    "addx 1",
                    "addx -33",
                    "noop",
                    "noop",
                    "noop",
                    "addx 2",
                    "noop",
                    "noop",
                    "noop",
                    "addx 8",
                    "noop",
                    "addx -1",
                    "addx 2",
                    "addx 1",
                    "noop",
                    "addx 17",
                    "addx -9",
                    "addx 1",
                    "addx 1",
                    "addx -3",
                    "addx 11",
                    "noop",
                    "noop",
                    "addx 1",
                    "noop",
                    "addx 1",
                    "noop",
                    "noop",
                    "addx -13",
                    "addx -19",
                    "addx 1",
                    "addx 3",
                    "addx 26",
                    "addx -30",
                    "addx 12",
                    "addx -1",
                    "addx 3",
                    "addx 1",
                    "noop",
                    "noop",
                    "noop",
                    "addx -9",
                    "addx 18",
                    "addx 1",
                    "addx 2",
                    "noop",
                    "noop",
                    "addx 9",
                    "noop",
                    "noop",
                    "noop",
                    "addx -1",
                    "addx 2",
                    "addx -37",
                    "addx 1",
                    "addx 3",
                    "noop",
                    "addx 15",
                    "addx -21",
                    "addx 22",
                    "addx -6",
                    "addx 1",
                    "noop",
                    "addx 2",
                    "addx 1",
                    "noop",
                    "addx -10",
                    "noop",
                    "noop",
                    "addx 20",
                    "addx 1",
                    "addx 2",
                    "addx 2",
                    "addx -6",
                    "addx -11",
                    "noop",
                    "noop",
                    "noop"
                };

                return Task.FromResult(input);
            });

            var solver = new AdventOfCode2022.Day._10.Solver(fileReaderMock.Object);

            var result = await solver.PartOne();

            Assert.AreEqual("13140", result);
        }

        [TestMethod]
        public async Task Part2_ForImputFromExample_ShouldReturnImage()
        {
            var fileReaderMock = new Mock<ITextFileReader>();
            fileReaderMock.Setup(reader => reader.ReadAllLinesAsync(It.IsAny<string>())).Returns(() =>
            {
                var input = new[]
                {
                    "addx 15",
                    "addx -11",
                    "addx 6",
                    "addx -3",
                    "addx 5",
                    "addx -1",
                    "addx -8",
                    "addx 13",
                    "addx 4",
                    "noop",
                    "addx -1",
                    "addx 5",
                    "addx -1",
                    "addx 5",
                    "addx -1",
                    "addx 5",
                    "addx -1",
                    "addx 5",
                    "addx -1",
                    "addx -35",
                    "addx 1",
                    "addx 24",
                    "addx -19",
                    "addx 1",
                    "addx 16",
                    "addx -11",
                    "noop",
                    "noop",
                    "addx 21",
                    "addx -15",
                    "noop",
                    "noop",
                    "addx -3",
                    "addx 9",
                    "addx 1",
                    "addx -3",
                    "addx 8",
                    "addx 1",
                    "addx 5",
                    "noop",
                    "noop",
                    "noop",
                    "noop",
                    "noop",
                    "addx -36",
                    "noop",
                    "addx 1",
                    "addx 7",
                    "noop",
                    "noop",
                    "noop",
                    "addx 2",
                    "addx 6",
                    "noop",
                    "noop",
                    "noop",
                    "noop",
                    "noop",
                    "addx 1",
                    "noop",
                    "noop",
                    "addx 7",
                    "addx 1",
                    "noop",
                    "addx -13",
                    "addx 13",
                    "addx 7",
                    "noop",
                    "addx 1",
                    "addx -33",
                    "noop",
                    "noop",
                    "noop",
                    "addx 2",
                    "noop",
                    "noop",
                    "noop",
                    "addx 8",
                    "noop",
                    "addx -1",
                    "addx 2",
                    "addx 1",
                    "noop",
                    "addx 17",
                    "addx -9",
                    "addx 1",
                    "addx 1",
                    "addx -3",
                    "addx 11",
                    "noop",
                    "noop",
                    "addx 1",
                    "noop",
                    "addx 1",
                    "noop",
                    "noop",
                    "addx -13",
                    "addx -19",
                    "addx 1",
                    "addx 3",
                    "addx 26",
                    "addx -30",
                    "addx 12",
                    "addx -1",
                    "addx 3",
                    "addx 1",
                    "noop",
                    "noop",
                    "noop",
                    "addx -9",
                    "addx 18",
                    "addx 1",
                    "addx 2",
                    "noop",
                    "noop",
                    "addx 9",
                    "noop",
                    "noop",
                    "noop",
                    "addx -1",
                    "addx 2",
                    "addx -37",
                    "addx 1",
                    "addx 3",
                    "noop",
                    "addx 15",
                    "addx -21",
                    "addx 22",
                    "addx -6",
                    "addx 1",
                    "noop",
                    "addx 2",
                    "addx 1",
                    "noop",
                    "addx -10",
                    "noop",
                    "noop",
                    "addx 20",
                    "addx 1",
                    "addx 2",
                    "addx 2",
                    "addx -6",
                    "addx -11",
                    "noop",
                    "noop",
                    "noop"
                };

                return Task.FromResult(input);
            });

            var solver = new AdventOfCode2022.Day._10.Solver(fileReaderMock.Object);

            var result = await solver.PartTwo();

            var expectedResult = "##..##..##..##..##..##..##..##..##..##..\n" +
                                 "###...###...###...###...###...###...###.\n" +
                                 "####....####....####....####....####....\n" +
                                 "#####.....#####.....#####.....#####.....\n" +
                                 "######......######......######......####\n" +
                                 "#######.......#######.......#######.....";

            Assert.AreEqual(expectedResult.Replace("\n", string.Empty), result.Replace("\n", string.Empty));
        }
    }
}